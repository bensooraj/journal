"use strict";(self.webpackChunkjournal=self.webpackChunkjournal||[]).push([[2938],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),h=r,d=p["".concat(s,".").concat(h)]||p[h]||m[h]||l;return a?n.createElement(d,o(o({ref:t},c),{},{components:a})):n.createElement(d,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(7462),r=a(7294),l=a(6010),o=a(2466),i=a(6550),s=a(1980),u=a(7392),c=a(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,u]=d({queryString:a,groupId:n}),[p,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),f=(()=>{const e=s??p;return h({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,l]),tabValues:l}}var f=a(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==i&&(p(t),s(n))},h=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:h,onClick:m},o,{className:(0,l.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function k(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=b(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g.tabList)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(k,(0,n.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},2101:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(4866),o=a(5162);const i={sidebar_position:4},s="Evaluation Context and Variables",u={unversionedId:"byo-terraform-vultr/eval-ctx-and-vars",id:"byo-terraform-vultr/eval-ctx-and-vars",title:"Evaluation Context and Variables",description:"Evaluation Context",source:"@site/docs/2-byo-terraform-vultr/4-eval-ctx-and-vars.md",sourceDirName:"2-byo-terraform-vultr",slug:"/byo-terraform-vultr/eval-ctx-and-vars",permalink:"/docs/byo-terraform-vultr/eval-ctx-and-vars",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Labels",permalink:"/docs/byo-terraform-vultr/labels"},next:{title:"Functions",permalink:"/docs/byo-terraform-vultr/eval-ctx-and-funcs"}},c={},p=[{value:"Evaluation Context",id:"evaluation-context",level:2},{value:"Variables",id:"variables",level:2},{value:"Nested Variables",id:"nested-variables",level:3},{value:"Pull request/Commits",id:"pull-requestcommits",level:2}],m={toc:p},h="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"evaluation-context-and-variables"},"Evaluation Context and Variables"),(0,r.kt)("h2",{id:"evaluation-context"},"Evaluation Context"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Each argument attribute in a configuration file is interpreted as an expression. In the HCL native syntax, certain basic expression functionality is always available, such as arithmetic and template strings, and the calling application can extend this by making available specific variables and/or functions via an ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"evaluation context")),". (",(0,r.kt)("em",{parentName:"p"},"source"),": ",(0,r.kt)("a",{parentName:"p",href:"https://hcl.readthedocs.io/en/latest/go_expression_eval.html#expression-evaluation"},(0,r.kt)("em",{parentName:"a"},"Expression Evaluation")),")")),(0,r.kt)("p",null,"All expressions or argument attributes up until now have been literal values (as shown in ",(0,r.kt)("inlineCode",{parentName:"p"},"literal.hcl")," below). Let's now load these values using variables (",(0,r.kt)("inlineCode",{parentName:"p"},"AMS")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"env.VULTR_API_KEY"),") and functions (",(0,r.kt)("inlineCode",{parentName:"p"},"file(...)"),") instead (as shown in ",(0,r.kt)("inlineCode",{parentName:"p"},"dynamic.hcl")," below)."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"hcl-literal",label:"literal.hcl",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'griffon {\n// highlight-start\n    region = "ams"\n    vultr_api_key = "1234567890"\n// highlight-end\n}\nssh_key "my_key" {\n// highlight-start\n    ssh_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADA"\n// highlight-end\n}\n'))),(0,r.kt)(o.Z,{value:"hcl-dynamic",label:"dynamic.hcl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'griffon {\n// highlight-start\n    region = AMS // or ${AMS}\n    vultr_api_key = env.VULTR_API_KEY\n// highlight-end\n}\nssh_key "my_key" {\n// highlight-start\n    ssh_key = file("~/.ssh/griffon_ssh_key.pub")\n// highlight-end\n}\n')))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"EvalContext"),"(",(0,r.kt)("inlineCode",{parentName:"em"},"hcl.EvalContext"),") is the type used to describe the ",(0,r.kt)("inlineCode",{parentName:"em"},"variables")," and ",(0,r.kt)("inlineCode",{parentName:"em"},"functions")," available during expression evaluation, if any.")," (source: ",(0,r.kt)("a",{parentName:"p",href:"https://hcl.readthedocs.io/en/latest/go_expression_eval.html#hcl.EvalContext"},"Expression Evaluation | EvalContext"),")"),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("p",null,"If we parse the following HCL data without making any changes to the parser function ",(0,r.kt)("inlineCode",{parentName:"p"},"func ParseHCL(filename string, src []byte) (*Config, error) {...}"),","),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl",metastring:'title="test.hcl" showLineNumbers',title:'"test.hcl"',showLineNumbers:!0},'griffon {\n    // highlight-start\n    region = AMS\n    // highlight-end\n    vultr_api_key = "1234567890"\n}\n')),(0,r.kt)("p",null,"we will get the following error:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ go test -timeout 30s -run ^TestParseGriffonBlock_Variables$ github.com/bensooraj/griffon -v\n=== RUN   TestParseGriffonBlock_Variables\n=== RUN   TestParseGriffonBlock_Variables/parse_AMS_as_a_variable\n    parser_test.go:74: HCL diagnostic error [ 0 ]: test.hcl:3,14-17: Variables not allowed; Variables may not be used here.\n    parser_test.go:74: HCL diagnostic error [ 1 ]: test.hcl:3,14-17: Unsuitable value type; Unsuitable value: value must be known\n    require.go:794: \n                Error Trace:    parser_test.go:77\n                Error:          Received unexpected error:\n                                test.hcl:3,14-17: Variables not allowed; Variables may not be used here., and 1 other diagnostic(s)\n                Test:           TestParseGriffonBlock_Variables/parse_AMS_as_a_variable\n--- FAIL: TestParseGriffonBlock_Variables (0.00s)\n    --- FAIL: TestParseGriffonBlock_Variables/parse_AMS_as_a_variable (0.00s)\nFAIL\nFAIL    github.com/bensooraj/griffon    0.474s\nFAIL\n")),(0,r.kt)("p",null,"In order for the parser to understand ",(0,r.kt)("inlineCode",{parentName:"p"},"AMS")," as a variable, we will create an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"hcl.EvalContext")," and pass it to ",(0,r.kt)("inlineCode",{parentName:"p"},"hclsimple.Decode(filename string, src []byte, ctx *hcl.EvalContext, target interface{}) error")," as a the third argument (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bensooraj/griffon/commit/0863a4bbae5e838869fb805a9ae7a1f917df8268"},(0,r.kt)("inlineCode",{parentName:"a"},"0863a4b")),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="parser.go"',title:'"parser.go"'},'// highlight-start\nfunc ParseHCL(filename string, src []byte, ctx *hcl.EvalContext) (*Config, error) {\n    // highlight-end\n    // ...\n}\n\nfunc getEvalContext() *hcl.EvalContext {\n    vars := make(map[string]cty.Value)\n\n    // Region variables\n    // highlight-start\n    vars["AMS"] = cty.StringVal("ams")\n    // highlight-end\n\n    return &hcl.EvalContext{\n        Variables: vars,\n    }\n}\n')),(0,r.kt)("p",null,"We can also use these variables as template strings (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bensooraj/griffon/commit/cfd6327ad86c3b733d1688e689b12ed6c87de437"},(0,r.kt)("inlineCode",{parentName:"a"},"cfd6327")),") as shown below,"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"hcl-example-1",label:"Example 1",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl",metastring:"showLineNumbers",showLineNumbers:!0},'griffon {\n    // highlight-start\n    region = "${AMS}terdam" // result: "amsterdam"\n    // highlight-end\n    vultr_api_key = "1234567890"\n}\n'))),(0,r.kt)(o.Z,{value:"hcl-example-2",label:"Example 2",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl",metastring:"showLineNumbers",showLineNumbers:!0},'griffon {\n    // highlight-start\n    region = "${AMS == "ams" ? "toronto" : "amsterdam"}" // result: "toronto"\n    // highlight-end\n    vultr_api_key = "1234567890"\n}\n')))),(0,r.kt)("h3",{id:"nested-variables"},"Nested Variables"),(0,r.kt)("p",null,"Say we want to load Vultr's API key from the environment,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl",metastring:"showLineNumbers",showLineNumbers:!0},'griffon {\n    region = "${AMS == "ams" ? "toronto" : "amsterdam"}" // result: "toronto"\n    // highlight-start\n    vultr_api_key = env.VULTR_API_KEY\n    // highlight-end\n}\n')),(0,r.kt)("p",null,"We will use the method ",(0,r.kt)("inlineCode",{parentName:"p"},"func cty.ObjectVal(attrs map[string]cty.Value) cty.Value")," to further nest key-value pairs and attach to ",(0,r.kt)("inlineCode",{parentName:"p"},"(hcl.EvalContext).Variables")," as shown below (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bensooraj/griffon/commit/650a749799cceb60ff818a3ffdcc5e938790d513"},(0,r.kt)("inlineCode",{parentName:"a"},"650a749")),"),"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="parser.go"',title:'"parser.go"'},'func getEvalContext() *hcl.EvalContext {\n    // ...\n    // highlight-start\n    // Environment variables\n    vars["env"] = cty.ObjectVal(map[string]cty.Value{\n        "VULTR_API_KEY": cty.StringVal(os.Getenv("VULTR_API_KEY")),\n    })\n    // highlight-end\n\n    return &hcl.EvalContext{\n        Variables: vars,\n    }\n}\n')),(0,r.kt)("h2",{id:"pull-requestcommits"},"Pull request/Commits"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bensooraj/griffon/pull/3/files"},"PR | Parse ",(0,r.kt)("inlineCode",{parentName:"a"},"Variables")," with ",(0,r.kt)("inlineCode",{parentName:"a"},"hcl.EvalContext")))))}d.isMDXComponent=!0}}]);