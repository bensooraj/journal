"use strict";(self.webpackChunkjournal=self.webpackChunkjournal||[]).push([[192],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},a="Introduction",c={unversionedId:"byo-terraform-vultr/introduction",id:"byo-terraform-vultr/introduction",title:"Introduction",description:"We will use the following HCL configuration file to create and tear-down resources in Vultr,",source:"@site/docs/2-byo-terraform-vultr/1-introduction.md",sourceDirName:"2-byo-terraform-vultr",slug:"/byo-terraform-vultr/introduction",permalink:"/docs/byo-terraform-vultr/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"BYOT",permalink:"/docs/category/byot"},next:{title:"Decoding basic HCL",permalink:"/docs/byo-terraform-vultr/decoding-basic-hcl"}},l={},s=[],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"We will use the following ",(0,o.kt)("inlineCode",{parentName:"p"},"HCL")," configuration file to create and tear-down resources in ",(0,o.kt)("inlineCode",{parentName:"p"},"Vultr"),","),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hcl",metastring:'title="griffon.hcl"',title:'"griffon.hcl"'},'griffon {\n    regiion = \'us-east-1\'\n}\n\ndata "region" "current" {}\n\ndata "plan" "all" {\n    filter {\n        region = region.current.id\n        vcpu_count = 1\n        ram = 1024\n        disk = 20\n    }\n}\n\ndata "os" "centos" {\n    filter {\n        type = "vc2"\n        name   = "CentOS 7 x64"\n        arch   = "x64"\n        family   = "centos"\n    }\n}\n\nssh_key "my_key" {\n    ssh_key = file("~/.ssh/id_rsa.pub")\n}\n\nstartup_script "my_script" {\n    name = "my_script"\n    script = base64encode(file("script.sh"))\n}\n\ninstance "my_vps" {\n    region = data.region.current.id\n    plan = data.plan.all.id\n    os_id = data.os.centos.id\n\n    sshkey_id = ssh_key.my_key.id\n    script_id = startup_script.my_script.id\n\n    hostname = "ben-vps"\n\n    tags = {\n        name = "ben-vps"\n        tier = "web"\n        env = "dev"\n    }\n}\n')),(0,o.kt)("p",null,"Ingredients:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/hashicorp/hcl"},"HCL v2 - HashiCorp configuration language")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.vultr.com/api/"},"Vultr API (2.0)")),(0,o.kt)("li",{parentName:"ul"},"Truck loads of patience...")))}d.isMDXComponent=!0}}]);