"use strict";(self.webpackChunkjournal=self.webpackChunkjournal||[]).push([[3154],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8456:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},i="Decoding basic HCL",l={unversionedId:"byo-terraform-vultr/decoding-basic-hcl",id:"byo-terraform-vultr/decoding-basic-hcl",title:"Decoding basic HCL",description:"At the very basic level, we can use the Decode method offered by the hcl/v2/hclsimple package,",source:"@site/docs/2-byo-terraform-vultr/2-decoding-basic-hcl.md",sourceDirName:"2-byo-terraform-vultr",slug:"/byo-terraform-vultr/decoding-basic-hcl",permalink:"/docs/byo-terraform-vultr/decoding-basic-hcl",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/byo-terraform-vultr/introduction"},next:{title:"Labels",permalink:"/docs/byo-terraform-vultr/labels"}},c={},s=[{value:"HCL constructs",id:"hcl-constructs",level:2},{value:"Pull request/Commits",id:"pull-requestcommits",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"decoding-basic-hcl"},"Decoding basic HCL"),(0,o.kt)("p",null,"At the very basic level, we can use the ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/hashicorp/hcl/v2@v2.19.1/hclsimple#Decode"},(0,o.kt)("inlineCode",{parentName:"a"},"Decode"))," method offered by the ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/hashicorp/hcl/v2@v2.19.1/hclsimple"},(0,o.kt)("inlineCode",{parentName:"a"},"hcl/v2/hclsimple"))," package,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func Decode(filename string, src []byte, ctx *hcl.EvalContext, target interface{}) error\n")),(0,o.kt)("p",null,"to decode this HCL,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hcl",metastring:'title="test.hcl"',title:'"test.hcl"'},'griffon {\n    region = "nyc1"\n    vultr_api_key = "1234567890"\n}\n')),(0,o.kt)("p",null,"onto the following Golang struct,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="config.go"',title:'"config.go"'},'type Config struct {\n    Griffon GriffonBlock `hcl:"griffon,block"`\n}\n// highlight-start\ntype GriffonBlock struct {\n    Region      string `hcl:"region,attr"`\n    VultrAPIKey string `hcl:"vultr_api_key"`\n}\n// highlight-end\n')),(0,o.kt)("h2",{id:"hcl-constructs"},"HCL constructs"),(0,o.kt)("p",null,"In the HCL file,"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"griffon")," is a ",(0,o.kt)("inlineCode",{parentName:"li"},"block")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'region = "nyc1"')," is an ",(0,o.kt)("inlineCode",{parentName:"li"},"argument"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"attribute"))),(0,o.kt)("p",null,"An excerpt from ",(0,o.kt)("a",{parentName:"p",href:"https://hcl.readthedocs.io/en/latest/intro.html#introduction-to-hcl"},"hcl.readthedocs.io"),","),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The collection of arguments and blocks at a particular nesting level is called a body. A file always has a root body containing the top-level elements, and each block also has its own body representing the elements within it."),(0,o.kt)("p",{parentName:"admonition"},"The term \u201cattribute\u201d can also be used to refer to what we\u2019ve called an \u201cargument\u201d so far. The term \u201cattribute\u201d is also used for the fields of an object value in argument expressions, and so \u201cargument\u201d is used to refer specifically to the type of attribute that appears directly within a body.")),(0,o.kt)("h2",{id:"pull-requestcommits"},"Pull request/Commits"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/bensooraj/griffon/pull/1/files"},"PR | decoding a basic HCL to a Golang struct"))))}d.isMDXComponent=!0}}]);